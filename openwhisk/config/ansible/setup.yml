#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
# This playbook prepares ansible configuration

- hosts: localhost
  tasks:
  # Generate hosts files
  - name: gen hosts if 'local' env is used
    local_action: template src="{{playbook_dir}}/environments/local/hosts.j2.ini" dest="{{ playbook_dir }}/environments/local/hosts"
    when: "'environments/local' in hosts_dir"

  - name: find the ip of docker-machine
    local_action: shell "docker-machine" "ip" "{{docker_machine_name | default('whisk')}}"
    register: result
    when: "'environments/docker-machine' in hosts_dir"

  - name: get the docker-machine ip
    set_fact:
      docker_machine_ip: "{{ result.stdout }}"
    when: "'environments/docker-machine' in hosts_dir"

  - name: gen hosts for docker-machine
    local_action: template src="{{playbook_dir}}/environments/docker-machine/hosts.j2.ini" dest="{{ playbook_dir }}/environments/docker-machine/hosts"
    when: "'environments/docker-machine' in hosts_dir"

  - name: gen hosts for Jenkins
    local_action: template src="{{playbook_dir}}/environments/jenkins/hosts.j2.ini" dest="{{ playbook_dir }}/environments/jenkins/hosts"
    when: "'environments/jenkins' in hosts_dir"

  - name: Refresh inventory to ensure generated hosts files are used
    meta: refresh_inventory

  # Generate db_local.ini
  - name: check if db_local.ini exists?
    tags: ini
    stat: path="{{ playbook_dir }}/db_local.ini"
    register: db_check

  - name: prepare db_local.ini
    tags: ini
    local_action: template src="db_local.ini.j2" dest="{{ playbook_dir }}/db_local.ini"
    when: not db_check.stat.exists